// code generated by pbf v
import Pbf from 'pbf'

export enum CharCategory {
  X = 0,
  Y = 1,
  Z = 2
}

export type Foo = {
  char_category?: CharCategory
  bar?: Bar[]
}
export function readFoo(pbf: Pbf, end?: number) {
  return pbf.readFields(readFooField, { char_category: 0, bar: [] }, end)
}
function readFooField(tag: number, obj: Foo, pbf: Pbf) {
  if (tag === 1) obj.char_category = pbf.readVarint()
  else if (tag === 2) obj.bar?.push(readBar(pbf, pbf.readVarint() + pbf.pos))
}
export function writeFoo(obj: Foo, pbf: Pbf) {
  if (obj.char_category) pbf.writeVarintField(1, obj.char_category)
  if (obj.bar) for (const item of obj.bar) pbf.writeMessage(2, writeBar, item)
}

export type Bar = {
  a?: string
  b?: number
  body?: Uint8Array
  meta?: Record<string, string>
}
export function readBar(pbf: Pbf, end?: number) {
  return pbf.readFields(readBarField, { a: '', b: 0, body: undefined, meta: {} }, end)
}
function readBarField(tag: number, obj: Bar, pbf: Pbf) {
  if (tag === 1) obj.a = pbf.readString()
  else if (tag === 2) obj.b = pbf.readVarint(true)
  else if (tag === 1) obj.body = pbf.readBytes()
  else if (tag === 4) {
    const { key, value } = readBar_FieldEntry4(pbf, pbf.readVarint() + pbf.pos)
    obj.meta && (obj.meta[key] = value)
  }
}
export function writeBar(obj: Bar, pbf: Pbf) {
  if (obj.a) pbf.writeStringField(1, obj.a)
  if (obj.b) pbf.writeVarintField(2, obj.b)
  if (obj.body != null) pbf.writeBytesField(1, obj.body)
  if (obj.meta)
    for (const key of Object.keys(obj.meta)) pbf.writeMessage(4, writeBar_FieldEntry4, { key, value: obj.meta[key] })
}

export type Bar_FieldEntry4 = {
  key?: string
  value?: string
}
export function readBar_FieldEntry4(pbf: Pbf, end?: number) {
  return pbf.readFields(readBar_FieldEntry4Field, { key: '', value: '' }, end)
}
function readBar_FieldEntry4Field(tag: number, obj: Bar_FieldEntry4, pbf: Pbf) {
  if (tag === 1) obj.key = pbf.readString()
  else if (tag === 2) obj.value = pbf.readString()
}
export function writeBar_FieldEntry4(obj: Bar_FieldEntry4, pbf: Pbf) {
  if (obj.key) pbf.writeStringField(1, obj.key)
  if (obj.value) pbf.writeStringField(2, obj.value)
}
